@model BezvizSystem.Web.Models.Visitor.CreateVisitorModel

@{
    ViewBag.Title = "Новый турист";
}

<h4>Новый турист</h4>
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.DateArrival, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DateArrival, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DateArrival, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateDeparture, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DateDeparture, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DateDeparture, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DaysOfStay, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DaysOfStay, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DaysOfStay, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CheckPoint, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CheckPoint, ViewBag.CheckPoints as SelectList, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CheckPoint, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PlaceOfRecidense, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PlaceOfRecidense, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PlaceOfRecidense, "", new { @class = "text-danger" })
        </div>
    </div>

    @* ---------------------------- *@
    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.Info)
            @Html.ValidationMessageFor(model => model.Info)
        </div>
    </div>
    @* ---------------------------- *@

    <div class="form-group">
        @Html.LabelFor(model => model.ProgramOfTravel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProgramOfTravel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProgramOfTravel, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TimeOfWork, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TimeOfWork, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TimeOfWork, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SiteOfOperator, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SiteOfOperator, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SiteOfOperator, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TelNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TelNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TelNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <input type="hidden" name="UserInSystem" value="@User.Identity.Name" />
    <input type="hidden" name="DateInSystem" value="@DateTime.Now" />
    <input type="hidden" name="Group" value="false" />

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Сохранить" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    <a href="@ViewBag.returnUrl">Назад</a>
</div>
